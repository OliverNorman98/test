window.F2W_REACTIONS = (() => { const w = []; return {} })(), window.F2W_VARIABLES = {}, window.F2W_COLLECTION_VARS = {}, window.F2W_COLLECTION_MODE_BPS = {}, window.F2W_COLOR_SCHEMES = void 0;


"use strict"; (() => {
    var Se = Object.defineProperty, Me = (e, t, r) => t in e ? Se(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, k = (e, t, r) => (Me(e, typeof t != "symbol" ? t + "" : t, r), r); function C(e, t) { return Math.round(e * t) / t } function W(e, t, r, n) { let o = (e + (n || "")).toString().includes("%"); if (typeof e == "string" ? [e, t, r, n] = e.match(/(0?\.?\d+)%?\b/g).map(a => Number(a)) : n !== void 0 && (n = Number.parseFloat(n)), typeof e != "number" || typeof t != "number" || typeof r != "number" || e > 255 || t > 255 || r > 255) throw new TypeError("Expected three numbers below 256"); if (typeof n == "number") { if (!o && n >= 0 && n <= 1) n = Math.round(255 * n); else if (o && n >= 0 && n <= 100) n = Math.round(255 * n / 100); else throw new TypeError(`Expected alpha value (${n}) as a fraction or percentage`); n = (n | 256).toString(16).slice(1) } else n = ""; return (r | t << 8 | e << 16 | 1 << 24).toString(16).slice(1) + n } function F(e) { return e.filter(Q) } function Q(e) { return e != null } function G(e) { console.warn(e) } var at = Object.assign(Object.create(null), { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, a: 10, A: 10, b: 11, B: 11, c: 12, C: 12, d: 13, D: 13, e: 14, E: 14, f: 15, F: 15 }); function V(e) { return typeof e == "object" && e.type === "VARIABLE_ALIAS" } function Ie(e) { if ("a" in e) { let r = C(e.a, 100); if (r !== 1) return `rgba(${e.r},${e.g},${e.b},${r})` } let t = W(e.r, e.g, e.b); return t[0] === t[1] && t[2] === t[3] && t[4] === t[5] ? `#${t[0]}${t[2]}${t[4]}` : `#${t}` } function Oe(e) { let { r: t, g: r, b: n, a: o = 1 } = e; return { r: C(t * 255, 1), g: C(r * 255, 1), b: C(n * 255, 1), a: o } } function b(e) { return `${C(e, 10)}px` } function J(e) { return `${C(e, 10)}%` } function ee(e) { switch (typeof e) { case "object": if (V(e)) return `var(${e.id})`; if ("r" in e) return Ie(Oe(e)); case "string": case "number": case "boolean": default: return String(e) } } function B(e) { return "T" + e } function K(e, t, r) {
        let n = Object.entries(t); if (!n.length) return ""; let o = [e + " {", ...n.filter(([, a]) => a !== void 0 && a !== "").map(([a, c]) => `  ${a}: ${c};`), "}"]; return r && (o = o.map(a => r + a)), o.join(`
`)
    } var Le = { padding: "0", margin: "0" }, Pe = { a: { color: "inherit", "text-decoration": "inherit" }, input: { border: "none", font: "inherit", outline: "none", "background-color": "inherit" }, button: { "border-style": "none", width: "auto", overflow: "visible", background: "transparent", font: "inherit", "background-color": "inherit", "line-height": "normal", color: "inherit" }, textarea: { font: "inherit", "background-color": "inherit" }, select: { font: "inherit", "background-color": "inherit" }, img: { display: "block" }, picture: { display: "block" }, video: { display: "block" }, canvas: { display: "block" }, svg: { display: "block" } }, Ft = K("*", Le) + Object.entries(Pe).map(([e, t]) => K(e, t)).join(`
`), te = ["mousedown", "mouseenter", "mouseleave", "mouseup", "timeout", "click", "press", "drag", "keydown", "hover"]; function ne(e, t, r) { if (r.direction === "LEFT") { if (t === "BOTTOM_LEFT" || t === "TOP_LEFT") return [{ eltId: e, props: [{ key: "left", from: "100%", to: "0%" }] }]; if (t === "BOTTOM_RIGHT" || t === "TOP_RIGHT") return [{ eltId: e, props: [{ key: "translate", from: "100% 0px", to: "0px 0px" }] }]; { let n = t === "CENTER" ? "-50%" : "0px"; return [{ eltId: e, props: [{ key: "left", from: "100%", to: "50%" }, { key: "translate", from: `0px ${n}`, to: `-50% ${n}` }] }] } } else if (r.direction === "RIGHT") { if (t === "BOTTOM_LEFT" || t === "TOP_LEFT") return [{ eltId: e, props: [{ key: "translate", from: "-100% 0px", to: "0px 0px" }] }]; if (t === "BOTTOM_RIGHT" || t === "TOP_RIGHT") return [{ eltId: e, props: [{ key: "right", from: "100%", to: "0px" }] }]; { let n = t === "CENTER" ? "-50%" : "0px"; return [{ eltId: e, props: [{ key: "left", from: "0px", to: "50%" }, { key: "translate", from: `-100% ${n}`, to: `-50% ${n}` }] }] } } else if (r.direction === "TOP") if (t === "BOTTOM_LEFT" || t === "BOTTOM_RIGHT" || t === "BOTTOM_CENTER") { let n = t === "BOTTOM_CENTER" ? "-50%" : "0px"; return [{ eltId: e, props: [{ key: "translate", from: `${n} 100%`, to: `${n} 0px` }] }] } else return t === "TOP_LEFT" || t === "TOP_RIGHT" || t === "TOP_CENTER" ? [{ eltId: e, props: [{ key: "top", from: "100%", to: "0px" }] }] : [{ eltId: e, props: [{ key: "top", from: "100%", to: "50%" }, { key: "translate", from: "-50% 0%", to: "-50% -50%" }] }]; else if (r.direction === "BOTTOM") { if (t === "BOTTOM_LEFT" || t === "BOTTOM_RIGHT" || t === "BOTTOM_CENTER") return [{ eltId: e, props: [{ key: "bottom", from: "100%", to: "0px" }] }]; if (t === "TOP_LEFT" || t === "TOP_RIGHT" || t === "TOP_CENTER") { let n = t === "TOP_CENTER" ? "-50%" : "0px"; return [{ eltId: e, props: [{ key: "translate", from: `${n} -100%`, to: `${n} 0px` }] }] } else return [{ eltId: e, props: [{ key: "top", from: "0px", to: "50%" }, { key: "translate", from: "-50% -100%", to: "-50% -50%" }] }] } else console.warn("Unsupported transition:", r); return [] } function D(e) { if (e) return (...t) => { if (!e) return; let r = e; return e = void 0, r(...t) } } var ke = e => e instanceof HTMLElement || e instanceof SVGElement; function Fe(e, t) { if (!e.parentElement) return; let r = new MutationObserver(n => { for (let o of n.filter(a => a.type === "childList")) for (let a of o.removedNodes) a === e && (t?.(), r.disconnect()) }); r.observe(e.parentElement, { childList: !0 }) } function O(e, t) { let r = new MutationObserver(n => { for (let o of n.filter(a => a.type === "childList")) for (let a of o.addedNodes) ke(a) && a.matches(e) && Fe(a, t(a)) }); return r.observe(document, { childList: !0, subtree: !0 }), () => r.disconnect() } var re = new Set(["youtube-video", "vimeo-video", "spotify-audio", "jwplayer-video", "videojs-video", "wistia-video", "cloudflare-video", "hls-video", "shaka-video", "dash-video"]); function Ve(e) { return re.has(e.tagName.toLowerCase()) || e.tagName === "VIDEO" } function Be(e) { if (e.tagName !== "IFRAME") return !1; let t = e.src; return (t.includes("youtube.com") || t.includes("youtube-nocookie.com")) && t.includes("enablejsapi=1") } var _ = class { constructor(e) { this.iframe = e, k(this, "info", {}), k(this, "loaded"), k(this, "messageListener", null), this.loaded = new Promise(t => { let r = () => { this.iframe.removeEventListener("load", r), setTimeout(() => { this.requestYoutubeListening() }) }; this.iframe.addEventListener("load", r), this.messageListener = n => { if (n.source === this.iframe.contentWindow && n.data) { let o; try { o = JSON.parse(n.data) } catch (a) { console.error("YoutubeController messageListener", a); return } o.event === "onReady" && this.iframe.removeEventListener("load", r), o.info && (Object.assign(this.info, o.info), t(!0)) } }, window.addEventListener("message", this.messageListener), this.requestYoutubeListening() }) } async sendYoutubeMessage(e, t = []) { await this.loaded, this.iframe.contentWindow?.postMessage(JSON.stringify({ event: "command", func: e, args: t }), "*") } requestYoutubeListening() { this.iframe.contentWindow?.postMessage(JSON.stringify({ event: "listening" }), "*") } get muted() { return this.info.muted } get volume() { return this.info.volume } set muted(e) { e ? this.sendYoutubeMessage("mute") : this.sendYoutubeMessage("unMute") } get currentTime() { return this.info.currentTime } set currentTime(e) { this.sendYoutubeMessage("seekTo", [e, !0]) } get paused() { return this.info.playerState === 2 } play() { this.sendYoutubeMessage("playVideo") } pause() { this.sendYoutubeMessage("pauseVideo") } static from(e) { return e.f2w_yt_controller || (e.f2w_yt_controller = new _(e)) } }; function v(e) { if (Ve(e)) return e; if (Be(e)) return _.from(e) } function oe(e) { let t = v(e); return t ? () => (t.muted = !t.muted, () => { t.muted = !t.muted }) : () => console.warn("Video element not recognized", e) } function ie(e) { let t = v(e); return t ? () => (t.muted = !0, () => { t.muted = !1 }) : () => console.warn("Video element not recognized", e) } function se(e) { let t = v(e); return t ? () => (t.muted = !1, () => { t.muted = !0 }) : () => console.warn("Video element not recognized", e) } function ae(e) { let t = v(e); return t ? () => (t.play(), () => t.pause()) : () => console.warn("Video element not recognized", e) } function de(e) { let t = v(e); return t ? () => (t.pause(), () => t.play()) : () => console.warn("Video element not recognized", e) } function le(e) { let t = v(e); return t ? () => (t.paused ? t.play() : t.pause(), () => { t.paused ? t.play() : t.pause() }) : () => console.warn("Video element not recognized", e) } function ce(e, t) { let r = v(e); return r ? () => { r.currentTime = t } : () => console.warn("Video element not recognized", e) } function ue(e, t) { let r = v(e); return r ? () => (r.currentTime += t, () => { r.currentTime -= t }) : () => console.warn("Video element not recognized", e) } function pe(e, t) { let r = v(e); return r ? () => (r.currentTime -= t, () => { r.currentTime += t }) : () => console.warn("Video element not recognized", e) } function fe() { let e = navigator.userAgent; return e.includes("Safari") && !e.includes("Chrome") } var De = !fe(); function H(e, t, r) { e.animate({ ...t }, { pseudoElement: r, iterations: 1, duration: 0, fill: "forwards" }) } function U(e) { return Object.fromEntries(e.map(t => [t.camelKey, [t.from, t.to]])) } function me(e, t, r, n, o) { let a = t.map(l => ({ ...l, camelKey: l.key.replace(/-([a-z])/g, (d, u) => u.toUpperCase()) })), c = a.filter(l => !l.pseudo), i = U(c), s = U(a.filter(l => l.pseudo === "::before")), m = U(a.filter(l => l.pseudo === "::after")); i.display && (e.style.display = String(i.display[1]), delete i.display), !De && i.overflow && (e.style.overflow = String(i.overflow[1]), delete i.overflow); let g = +getComputedStyle(e).getPropertyValue("--f2w-order"); if (i["--f2w-order"]) { let l = i["--f2w-order"][1]; g = l === void 0 ? NaN : +l, isNaN(g) || e.style.setProperty("--f2w-order", String(g)), delete i["--f2w-order"] } if (i["--f2w-img-src"]) { let l = e.f2w_image_lazy_loader, d = i["--f2w-img-src"][1]; l || (e.f2w_image_lazy_loader = l = new Image, l.decoding = "sync", l.onload = () => { e.decoding = "sync", e.setAttribute("src", d), delete e.f2w_image_lazy_loader }), l.src = d, delete i["--f2w-img-src"] } if (i.$innerHTML && (e.innerHTML = String(i.$innerHTML[1]), delete i.$innerHTML), i.left && i.right) { if (i.left[1] === "revert" && i.right[0] === "revert") { let { right: l } = e.parentElement.getBoundingClientRect(), { right: d } = e.getBoundingClientRect(), u = b(l - d); H(e, { left: "revert", right: u }), delete i.left, i.right[0] = u } else if (i.left[0] === "revert" && i.right[1] === "revert") { let { left: l } = e.parentElement.getBoundingClientRect(), { left: d } = e.getBoundingClientRect(), u = b(d - l); H(e, { right: "revert", left: u }), delete i.right, i.left[0] = u } } if (i.top && i.bottom) { if (i.top[1] === "revert" && i.bottom[0] === "revert") { let { bottom: l } = e.parentElement.getBoundingClientRect(), { bottom: d } = e.getBoundingClientRect(), u = b(l - d); H(e, { top: "revert", bottom: u }), delete i.top, i.bottom[0] = u } else if (i.top[0] === "revert" && i.bottom[1] === "revert") { let { top: l } = e.parentElement.getBoundingClientRect(), { top: d } = e.getBoundingClientRect(), u = b(d - l); H(e, { bottom: "revert", top: u }), delete i.bottom, i.top[0] = u } } i.backgroundImage && c.filter(l => l.key.startsWith("background-")).forEach(l => { e.style.setProperty(l.key, String(l.to)), delete i[l.camelKey] }); for (let [l, d] of [["before", s], ["after", m]]) d.display && (d.display[1] === "none" ? (e.classList.remove(l + "-visible"), e.classList.add(l + "-hidden")) : (e.classList.remove(l + "-hidden"), e.classList.add(l + "-visible"))); isNaN(g) || o.add(e.parentElement); let T = (l, d) => { e.animate({ easing: r, ...l }, { pseudoElement: d, iterations: 1, duration: n, fill: "both" }) }; T(i), T(s, "::before"), T(m, "::after") } if ("mediumZoom" in window) { let e = mediumZoom("[data-zoomable]"); e.on("open", t => { let r = getComputedStyle(t.target).objectFit, n = t.detail.zoom.getZoomedImage(); r && n && (n.style.objectFit = r) }), e.on("closed", t => { let r = t.detail.zoom.getZoomedImage(); r.style.objectFit = "" }) } var ve = () => window.F2W_REACTIONS, z = () => window.F2W_VARIABLES, He = () => window.F2W_COLLECTION_MODE_BPS, $e = (e, t) => window.F2W_COLLECTION_VARS?.[e]?.[t]; function Ne(e, t) { z()[e] = t; let r = ee(t); document.body.style.setProperty(e, r); let n = `data${e.slice(1)}`; document.body.hasAttribute(n) && document.body.setAttribute(n, r), document.dispatchEvent(new CustomEvent("f2w-set-variable", { detail: { id: e, value: t, str: r } })) } function q(e, t) { document.body.setAttribute(`data-${e}`, t); let r = $e(e, t) ?? {}; for (let [n, o] of Object.entries(r)) Ne(n, o) } function ze(e, t) { q(e, t), window.F2W_COLOR_SCHEMES?.includes(e) && localStorage?.setItem(Ae, t) } function E(e) { return typeof e == "number" ? e : typeof e == "boolean" ? e ? 1 : 0 : typeof e == "string" ? parseFloat(e) : 0 } function S(e) { return String(e) } function x(e) { return typeof e == "string" ? e === "true" : !!e } function I(e, t) { if (e === void 0) return !1; if (V(e)) return I(z()[e.id]); if (typeof e == "object" && "expressionArguments" in e) { let r = e.expressionArguments.map(o => o.value).filter(o => o !== void 0).map(o => I(o, t)), n = e.expressionArguments[0]?.resolvedType ?? "STRING"; switch (e.expressionFunction) { case "ADDITION": return n === "FLOAT" ? r.map(E).reduce((o, a) => o + a) : r.map(S).reduce((o, a) => o + a); case "SUBTRACTION": if (r.length !== 2) throw new Error("Invalid expression"); return E(r[0]) - E(r[1]); case "DIVISION": if (r.length !== 2) throw new Error("Invalid expression"); return E(r[0]) / E(r[1]); case "MULTIPLICATION": return r.map(E).reduce((o, a) => o * a); case "NEGATE": if (r.length !== 1) throw new Error("Invalid expression"); return -E(r[0]); case "GREATER_THAN": if (r.length !== 2) throw new Error("Invalid expression"); return E(r[0]) > E(r[1]); case "GREATER_THAN_OR_EQUAL": if (r.length !== 2) throw new Error("Invalid expression"); return E(r[0]) >= E(r[1]); case "LESS_THAN": if (r.length !== 2) throw new Error("Invalid expression"); return E(r[0]) < E(r[1]); case "LESS_THAN_OR_EQUAL": if (r.length !== 2) throw new Error("Invalid expression"); return E(r[0]) <= E(r[1]); case "EQUALS": if (r.length !== 2) throw new Error("Invalid expression"); return n === "FLOAT" ? E(r[0]) === E(r[1]) : n === "BOOLEAN" ? x(r[0]) === x(r[1]) : S(r[0]) === S(r[1]); case "NOT_EQUAL": if (r.length !== 2) throw new Error("Invalid expression"); return n === "FLOAT" ? E(r[0]) !== E(r[1]) : n === "BOOLEAN" ? x(r[0]) !== x(r[1]) : S(r[0]) !== S(r[1]); case "AND": if (r.length !== 2) throw new Error("Invalid expression"); return x(r[0]) && x(r[1]); case "OR": if (r.length !== 2) throw new Error("Invalid expression"); return x(r[0]) || x(r[1]); case "NOT": if (r.length !== 1) throw new Error("Invalid expression"); return !x(r[0]); case "VAR_MODE_LOOKUP": default: return console.warn(`Expression not implemented yet: ${e.expressionFunction}`), !1 } } else return e } function Y(e, t, r) { let n = e.map(o => We(o, t, r)); return (o, a) => { let c = n.map(i => i(o, a)).filter(i => !!i); if (c.length) return (i, s) => c.forEach(m => m(i, s)) } } function We(e, t, r) { for (; e.type === "ALIAS";)e = ve()[e.alias]; let n = Ge(e, t, r); return o => { if (e.type !== "ANIMATE" && r === "drag") { let a = o.detail; if (!a.handled) return a.handled = !0, n(o) } if (!w) { if (e.type === "ANIMATE" && e.rootId) { let a = document.getElementById(e.rootId); if (a?.parentElement) { let c = D(n(o)); if (c) { let i = a?.parentElement; for (; i && ((i.f2w_reset || (i.f2w_reset = [])).push(c), i = i.parentElement, i?.tagName !== "BODY");); } return c } } return n(o) } } } function Ge(action, bound, trigger) { switch (action.type) { case "BACK": return () => (window.F2W_PREVIEW_BACK ?? history.back)(); case "JS": return () => eval(action.code); case "URL": return () => { action.openInNewTab ? window.open(action.url, "_blank") : window.F2W_PREVIEW_NAVIGATE ? window.F2W_PREVIEW_NAVIGATE(action.url) : location.assign(action.url) }; case "SET_VARIABLE": let { variableId, variableValue } = action; if (variableId && variableValue?.value !== void 0) return () => Ne(variableId, I(variableValue.value, variableId)); break; case "SET_VARIABLE_MODE": let { variableCollectionName, variableModeName } = action; if (variableCollectionName && variableModeName) return () => ze(variableCollectionName, variableModeName); break; case "CONDITIONAL": let blocks = action.conditionalBlocks.map(e => { let t = Y(e.actions, bound, trigger), { condition: r } = e; return { test: r ? () => x(I(r.value)) : () => !0, run: t } }); return () => { let e = []; for (let t of blocks) if (t.test()) { let r = t.run(); r && e.push(r); break } if (e.length) return t => e.forEach(r => r(t)) }; case "KEY_CONDITION": let run = Y(action.actions, bound, trigger), keyCode = action.keyCodes[0], shiftKey = action.keyCodes.slice(1).includes(16), ctrlKey = action.keyCodes.slice(1).includes(17), altKey = action.keyCodes.slice(1).includes(18), metaKey = action.keyCodes.slice(1).includes(91); return e => { if (e instanceof KeyboardEvent) { if (e.keyCode !== keyCode || e.ctrlKey !== ctrlKey || e.altKey !== altKey || e.metaKey !== metaKey || e.shiftKey !== shiftKey) return; e.preventDefault(), e.stopPropagation(), run(e) } }; case "CLOSE_OVERLAY": { if (action.self) return e => e?.target?.f2w_close?.(); if (action.overlayId) { let e = document.getElementById(action.overlayId); if (!e) break; return () => e.f2w_close?.() } break } case "SCROLL_TO": if (!action.destinationId) break; let elt = document.getElementById(action.destinationId); if (!elt) break; return e => { e?.currentTarget instanceof HTMLAnchorElement && e?.preventDefault(), elt.scrollIntoView({ behavior: action.transition?.type ? "smooth" : "instant" }) }; case "OVERLAY": if (!action.destinationId) break; let overlay = document.getElementById(action.destinationId); if (!overlay) break; let modal = Array(...overlay.children).find(e => e.tagName !== "TEMPLATE"); if (!modal) break; let { transition, overlayPositionType, overlayRelativePosition } = action, duration = Math.round(1e3 * (transition?.duration ?? 0)), animations = [{ eltId: action.destinationId, props: [{ key: "visibility", from: "hidden", to: "visible" }, { key: "opacity", from: "0", to: "1" }] }]; return overlayPositionType === "MANUAL" ? () => { if (trigger === "hover") { let n = bound.f2w_mouseleave_remove?.(); if (n) { let o = a => { Ee(a, bound) && Ee(a, modal) && (n(), document.removeEventListener("mousemove", o)) }; document.addEventListener("mousemove", o) } } let e = animations.slice(0), t = b(bound.getBoundingClientRect().left + (overlayRelativePosition?.x ?? 0)), r = b(bound.getBoundingClientRect().top + (overlayRelativePosition?.y ?? 0)); return modal.style.setProperty("left", t), modal.style.setProperty("top", r), transition?.type === "MOVE_IN" && (transition.direction === "LEFT" ? e.push({ eltId: modal.id, props: [{ key: "left", from: "100%", to: t }] }) : transition.direction === "RIGHT" ? e.push({ eltId: modal.id, props: [{ key: "left", from: "0px", to: t }, { key: "translate", from: "-100% 0px", to: "0px 0px" }] }) : transition.direction === "TOP" ? e.push({ eltId: modal.id, props: [{ key: "top", from: "100%", to: r }] }) : transition.direction === "BOTTOM" && e.push({ eltId: modal.id, props: [{ key: "top", from: "0px", to: r }, { key: "translate", from: "0px -100%", to: "0px 0px" }] })), j(e, transition?.easing, duration, bound, trigger, `${trigger}(manual_overlay)`, overlay)() } : (transition?.type === "MOVE_IN" ? animations.push(...ne(modal.id, overlayPositionType, transition)) : transition?.type && console.warn("Unsupported transition:", transition), j(animations, transition?.easing, duration, bound, trigger, `${trigger}(overlay)`, overlay)); case "ANIMATE": { let { animations: e, transition: t, rootId: r, reset: n } = action, o = Math.round(1e3 * (t?.duration ?? 0)), a = j(e, t?.easing, o, bound, trigger, n ? `${trigger}(+reset)` : trigger); return n && r ? (c, i) => { let s = document.getElementById(r); if (s) { let { f2w_reset: m } = s; m?.length && (delete s.f2w_reset, m.reverse().forEach(g => g(void 0, !0))) } return a(c, i) } : a } case "UPDATE_MEDIA_RUNTIME": { if (!action.destinationId) break; let e = document.getElementById(action.destinationId); if (!e) break; switch (action.mediaAction) { case "MUTE": return ie(e); case "UNMUTE": return se(e); case "TOGGLE_MUTE_UNMUTE": return oe(e); case "PLAY": return ae(e); case "PAUSE": return de(e); case "TOGGLE_PLAY_PAUSE": return le(e); case "SKIP_BACKWARD": return pe(e, action.amountToSkip); case "SKIP_FORWARD": return ue(e, action.amountToSkip); case "SKIP_TO": return ce(e, action.newTimestamp) } } default: return () => console.warn("Action not implemented yet: " + action.type) }return () => { } } var ge = 9999; function j(e, t = "linear", r, n, o, a, c) { return i => { let s = e; c && (document.body.parentElement.style.overflow = "hidden", s = [{ eltId: c.id, props: [{ key: "z-index", from: 0, to: ge++ }] }, ...s]); let m = M(s, t, r, n, o, a, i), g = D((T, l) => { c && (ge--, document.body.parentElement.style.overflow = ""), M(m, t, l ? 0 : r, n, o, `${a}(revert)`) }); return c && (c.f2w_close = g), g } } function M(e, t, r, n, o, a, c) { let i = [], s = new Set; if (o === "drag") return Ke(e, t, r, n, c.detail), []; for (let { eltId: m, altId: g, props: T, reactions: l } of e) { let d = document.getElementById(m); if (!d) { G(`Can't find element for id: ${m}`); continue } if (g) { let u = document.getElementById(g); if (!u) { let p = document.getElementById(B(g)); if (!p) { G(`Can't find template for id: ${g}`); continue } u = (p.content?.cloneNode(!0)).querySelector("*") } we(u, !0, r); let { f2w_mouseup: f, f2w_mouseleave: h } = d; f && u.addEventListener("mouseup", f), h && u.addEventListener("mouseleave", h), (h || f) && u.classList.remove("pointer-events-none"), d.parentElement.replaceChild(u, d); let y = document.getElementById(B(m)); y || (y = document.createElement("template"), y.id = B(m), y.innerHTML = d.outerHTML, u.insertAdjacentElement("afterend", y)), i.push({ eltId: u.id, altId: d.id }), isNaN(+getComputedStyle(u).getPropertyValue("--f2w-order")) || s.add(u.parentElement) } else { let u = (T || []).map(f => { let h = ye(d, f.key, f.from), y = ye(d, f.key, f.to); return { key: f.key, pseudo: f.pseudo, from: h, to: y } }).filter(f => f.from !== f.to); me(d, u, t, r, s), l && (o !== "hover" && d.f2w_mouseleave_remove?.(), l.forEach(f => Re(d, f.type, f.to, r))), i.push({ eltId: m, props: u.map(f => ({ key: f.key, from: f.to, to: f.from })), reactions: l?.map(f => ({ type: f.type, from: f.to, to: f.from })) }) } } for (let m of s) { let g = Array.from(m.children).map((l, d) => ({ it: l, i: d })), T = !1; g.sort((l, d) => { let u = +(getComputedStyle(l.it).getPropertyValue("--f2w-order") || "99999"), f = +(getComputedStyle(d.it).getPropertyValue("--f2w-order") || "99999"); return u - f }).forEach((l, d) => { T ? m.appendChild(l.it) : T = d !== l.i }) } return i } function Ke(e, t, r, n, o) { if (o.handled) return; let a = n.getBoundingClientRect(), c = M(e.filter(d => d.props).map(({ eltId: d, props: u }) => ({ eltId: d, props: u })), "linear", 0, n, "click", "drag_start(tmp)"), i = n.getBoundingClientRect(), s = i.left - a.left, m = i.top - a.top, g = Math.sqrt(s * s + m * m); M(c, "linear", 0, n, "click", "drag_start(tmp undo)"); let { x: T, y: l } = X(o.start, o.end); if (T > 0 && s > 0 || T < 0 && s < 0 || s === 0 && (l > 0 && m > 0 || l < 0 && m < 0)) { o.handled = !0; let d = e.map(h => ({ ...h, swapped: !1, props: h.props?.map(y => ({ ...y, curr: y.from })) })), u = h => { let { x: y, y: p } = X(h.start, h.end), A = (y * s + p * m) / g; return Math.max(0, Math.min(100, 100 * A / g)) }, f = h => { h.end.preventDefault(), h.end.stopPropagation(); let y = u(h); M(F(d.map(p => { let { reactions: A, ...L } = p; if (p.props) return { ...L, props: p.props.map(N => { let P = qe(N, y), Z = N.curr; return N.curr = P, { ...N, from: Z, to: P } }) }; if (p.altId) { if (y < 50 && p.swapped) return p.swapped = !1, { altId: p.eltId, eltId: p.altId }; if (y >= 50 && !p.swapped) return p.swapped = !0, L } })), "linear", 0, n, "click", "dragging") }; f(o), n.f2w_drag_listener = h => { if (f(h), h.finished) { let y = u(h); M(F(d.map(p => { if (p.props) { let A = y < 50 ? void 0 : p.reactions; return { eltId: p.eltId, props: p.props.map(L => ({ ...L, from: L.curr, to: y < 50 ? L.from : L.to })), reactions: A } } if (p.altId) { if (y < 50 && p.swapped) return p.swapped = !1, { altId: p.eltId, eltId: p.altId }; if (y >= 50 && !p.swapped) return p.swapped = !0, p } })), t, r, n, "click", "drag_end") } } } } function ye(e, t, r) { return r !== "$current" ? r : getComputedStyle(e).getPropertyValue(t) } function we(e, t = !1, r = 0) { for (let n of te) for (let o of Ue(e, `[data-reaction-${n}]`, t)) Re(o, n, o.getAttribute(`data-reaction-${n}`), r) } function Ue(e, t, r = !1) { let n = [...e.querySelectorAll(t)]; return r && e.matches(t) && n.unshift(e), n } function Re(e, t, r = "", n = 0) { let o = 0; if (r[0] === "T") { let s = r.indexOf("ms"); o = parseFloat(r.slice(1, s)) || 0, r = r.slice(s + 3) } let a = ve(), c = F(r.split(",").map(s => a[s])), i = Y(c, e, t); if (t === "timeout") Ye(e, () => i(), o + n); else if (t === "press") { let s, m = () => { s?.(), s = void 0 }; e.f2w_mouseup = m, $(e, "mousedown", g => { s?.(), s = i(g) }, t, R(e, "mouseup", m)) } else if (t === "drag") $(e, "dragging", s => { i(s) }, t); else if (t === "hover") { let s, m = f => { s || (s = D(i(f))) }, g = e.f2w_mouseleave_remove?.(), T = () => { s?.(), s = void 0, g?.() }, l = setTimeout(() => { e.matches(":hover") && m() }, n), d = R(e, "mouseleave", T), u = () => (d(), clearTimeout(l), delete e.f2w_mouseleave, delete e.f2w_mouseleave_remove, T); $(e, "mouseenter", m, t, u), e.f2w_mouseleave = T, e.f2w_mouseleave_remove = u } else t === "keydown" && !e.getAttribute("tabindex") && e.setAttribute("tabindex", "-1"), $(e, t, s => { t !== "keydown" && s.stopPropagation(), o ? setTimeout(() => i(s), o) : i(s) }, t) } function Ee({ clientX: e, clientY: t }, r) { let { top: n, left: o, right: a, bottom: c } = r.getBoundingClientRect(); return e > a + 2 || e < o - 2 || t > c + 2 || t < n - 2 } function je(e) { return `f2w_cleanup_${e}` } function Ye(e, t, r) { let n = setTimeout(t, r); e.f2w_cleanup_timeout?.(), e.f2w_cleanup_timeout = () => { delete e.f2w_cleanup_timeout, clearTimeout(n) } } function $(e, t, r, n, ...o) { let a = [...o, R(e, t, r)], c = je(n); e[c]?.(), e[c] = () => { delete e[c], a.forEach(i => i()) } } function R(e, t, r, n) { let o = a => { !e.isConnected || r(a) }; return e.addEventListener(t, o, n), () => { e.removeEventListener(t, o, n) } } var Ae = "f2w-color-scheme"; if (window.F2W_THEME_SWITCH = e => window.F2W_COLOR_SCHEMES?.forEach(t => q(t, e)), window.F2W_COLOR_SCHEMES) { let e = matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light", t = localStorage?.getItem(Ae); O("body", () => { let r = document.body.getAttribute("data-preview-theme") ?? t ?? e; window.F2W_THEME_SWITCH?.(r) }) } var Te = {}, Xe = Object.fromEntries(Object.entries(He()).map(([e, t]) => [e, Object.entries(t).map(([r, { minWidth: n }]) => ({ name: r, minWidth: n }))])); function he() { let e = window.visualViewport?.width || window.innerWidth; for (let [t, r] of Object.entries(Xe)) { let n = [...r], o = n.splice(0, 1)[0].name; for (let { name: a, minWidth: c } of n) e >= c && (o = a); o !== Te[t] && (q(t, o), Te[t] = o) } } var w = !1; O("body", () => { let e, t = !1; R(document, "mousedown", r => { e = r, w = !1 }), R(document, "mousemove", r => { if (e && X(e, r).dist > 2) { let n = { start: e, end: r }; w ? e.target?.f2w_drag_listener?.(n) : (e.target?.dispatchEvent(new CustomEvent("dragging", { detail: n })), w = !0, t = !0) } }), R(document, "mouseup", r => { e && w && e.target?.f2w_drag_listener?.({ start: e, end: r, finished: !0 }), e = void 0, w = !1 }), R(document, "mouseup", r => { e && w && e.target?.f2w_drag_listener?.({ start: e, end: r, finished: !0 }), e = void 0, w = !1 }), R(document, "click", r => { t && (t = !1, r.preventDefault(), r.stopPropagation()) }, { capture: !0 }), he(), window.addEventListener("resize", he) }), addEventListener("DOMContentLoaded", () => we(document)); function xe(e) { return e.endsWith("px") || e.endsWith("%") || e.startsWith("calc") } function be(e) { return e.startsWith("calc") ? e.slice(4) : e } function qe({ from: e, to: t }, r) { if (e === t) return t; if (typeof e == "number" && typeof t == "number") return e + (t - e) * (r / 100); if (typeof e == "string" && typeof t == "string") { if (e === "none" || t === "none" || e === "auto" || t === "auto") return r < 50 ? e : t; if (e.endsWith("px") && t.endsWith("px")) { let n = parseFloat(e), o = parseFloat(t); return b(n + (o - n) * (r / 100)) } if (e.endsWith("%") && t.endsWith("%")) { let n = parseFloat(e), o = parseFloat(t); return J(n + (o - n) * (r / 100)) } if (xe(e) && xe(t)) { let n = be(e), o = be(t); return `calc(${n} + (${o} - ${n}) * ${r / 100})` } if (e.startsWith("rgb") && t.startsWith("rgb")) { let n = e.match(/\d+/g).map(Number), o = t.match(/\d+/g).map(Number); return `rgb(${n.map((a, c) => a + (o[c] - a) * (r / 100)).join(",")})` } } return r < 50 ? e : t } function X(e, t) { let r = t.clientX - e.clientX, n = t.clientY - e.clientY; return { x: r, y: n, dist: Math.sqrt(Math.pow(r, 2) + Math.pow(n, 2)) } } O("[data-bound-characters]", e => { let t = () => { let r = e.getAttribute("data-bound-characters"), n = S(I(z()[r])); n !== e.textContent && (e.textContent = n) }; return t(), document.addEventListener("f2w-set-variable", t), () => document.removeEventListener("f2w-set-variable", t) }), O("[data-bound-visible]", e => { let t = () => { let r = e.getAttribute("data-bound-visible"), n = S(I(z()[r])); n !== void 0 && e.setAttribute("data-visible", n) }; return t(), document.addEventListener("f2w-set-variable", t), () => document.removeEventListener("f2w-set-variable", t) })
})();